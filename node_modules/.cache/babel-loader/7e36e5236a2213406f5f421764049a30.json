{"ast":null,"code":"var _jsxFileName = \"/home/joao/Projects/iconect_test/dropzone/src/components/Dropzone.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Dropzone.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropzone = () => {\n  _s();\n\n  const [fileBundles, setFileBundles] = useState([]);\n  const [isHovering, setIsHovering] = useState();\n\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  function handleDrop(event) {\n    setIsHovering(false);\n    event.preventDefault();\n    event.stopPropagation();\n    const newFiles = [];\n    const {\n      items,\n      files\n    } = event.dataTransfer;\n\n    if (items) {\n      for (let i = 0, item; item = items[i], i < items.length; i++) {\n        if (item.kind === \"file\") {\n          newFiles.push(item.getAsFile());\n        }\n      }\n    } else {\n      for (let i = 0, file; file = files[i], i < files.length; i++) {\n        console.log(\"... file[\" + i + \"].name = \" + file.name);\n      }\n    }\n\n    setFileBundles(f => {\n      f.push({\n        files: newFiles,\n        custodian: \"Anonymous\"\n      });\n      return f;\n    });\n  }\n\n  function handleDropzoneClick(event) {}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDragOver: handleDragOver,\n    onDragEnter: () => setIsHovering(true),\n    onDragExit: () => setIsHovering(false),\n    onDrop: handleDrop,\n    onClick: handleDropzoneClick,\n    className: `Dropzone ${isHovering ? \"hovering\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      tabIndex: -1,\n      className: \"hiddenInput\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), fileBundles.length ? null : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drop your files here or click to upload them.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dropzone, \"7FuFYku30NcheCuBUH/yAlkyMF0=\");\n\n_c = Dropzone;\nexport default Dropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropzone\");","map":{"version":3,"sources":["/home/joao/Projects/iconect_test/dropzone/src/components/Dropzone.tsx"],"names":["React","useState","Dropzone","fileBundles","setFileBundles","isHovering","setIsHovering","handleDragOver","event","preventDefault","handleDrop","stopPropagation","newFiles","items","files","dataTransfer","i","item","length","kind","push","getAsFile","file","console","log","name","f","custodian","handleDropzoneClick","handleFileUpload"],"mappings":";;;AAAA,OAAOA,KAAP,IAA8CC,QAA9C,QAA8D,OAA9D;AACA,OAAO,gBAAP;;;AAOA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAC5C,EAD4C,CAA9C;AAGA,QAAM,CAACI,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,EAA5C;;AAEA,WAASM,cAAT,CAAwBC,KAAxB,EAA6D;AAC3DA,IAAAA,KAAK,CAACC,cAAN;AACD;;AAED,WAASC,UAAT,CAAoBF,KAApB,EAAyD;AACvDF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,IAAAA,KAAK,CAACC,cAAN;AACAD,IAAAA,KAAK,CAACG,eAAN;AAEA,UAAMC,QAA4B,GAAG,EAArC;AAEA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmBN,KAAK,CAACO,YAA/B;;AAEA,QAAIF,KAAJ,EAAW;AACT,WAAK,IAAIG,CAAC,GAAG,CAAR,EAAWC,IAAhB,EAAuBA,IAAI,GAAGJ,KAAK,CAACG,CAAD,CAAb,EAAmBA,CAAC,GAAGH,KAAK,CAACK,MAAnD,EAA2DF,CAAC,EAA5D,EAAgE;AAC9D,YAAIC,IAAI,CAACE,IAAL,KAAc,MAAlB,EAA0B;AACxBP,UAAAA,QAAQ,CAACQ,IAAT,CAAcH,IAAI,CAACI,SAAL,EAAd;AACD;AACF;AACF,KAND,MAMO;AACL,WAAK,IAAIL,CAAC,GAAG,CAAR,EAAWM,IAAhB,EAAuBA,IAAI,GAAGR,KAAK,CAACE,CAAD,CAAb,EAAmBA,CAAC,GAAGF,KAAK,CAACI,MAAnD,EAA2DF,CAAC,EAA5D,EAAgE;AAC9DO,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAcR,CAAd,GAAkB,WAAlB,GAAgCM,IAAI,CAACG,IAAjD;AACD;AACF;;AAEDrB,IAAAA,cAAc,CAAEsB,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACN,IAAF,CAAO;AACLN,QAAAA,KAAK,EAAEF,QADF;AAELe,QAAAA,SAAS,EAAE;AAFN,OAAP;AAIA,aAAOD,CAAP;AACD,KANa,CAAd;AAOD;;AAED,WAASE,mBAAT,CAA6BpB,KAA7B,EAAoE,CAEnE;;AAED,sBACE;AACE,IAAA,UAAU,EAAED,cADd;AAEE,IAAA,WAAW,EAAE,MAAMD,aAAa,CAAC,IAAD,CAFlC;AAGE,IAAA,UAAU,EAAE,MAAMA,aAAa,CAAC,KAAD,CAHjC;AAIE,IAAA,MAAM,EAAEI,UAJV;AAKE,IAAA,OAAO,EAAEkB,mBALX;AAME,IAAA,SAAS,EAAG,YAAWvB,UAAU,GAAG,UAAH,GAAgB,EAAG,EANtD;AAAA,4BAQE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,QAAQ,EAAE,CAAC,CAHb;AAIE,MAAA,SAAS,EAAC,aAJZ;AAKE,MAAA,QAAQ,EAAEwB;AALZ;AAAA;AAAA;AAAA;AAAA,YARF,EAeG1B,WAAW,CAACe,MAAZ,GAAqB,IAArB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAjED;;GAAMhB,Q;;KAAAA,Q;AAmEN,eAAeA,QAAf","sourcesContent":["import React, { DragEvent, MouseEventHandler, useState } from \"react\";\nimport \"./Dropzone.css\";\n\ninterface FileBundle {\n  files: Array<File | null>;\n  custodian: string;\n}\n\nconst Dropzone = () => {\n  const [fileBundles, setFileBundles] = useState<Array<FileBundle | undefined>>(\n    []\n  );\n  const [isHovering, setIsHovering] = useState<boolean>();\n\n  function handleDragOver(event: DragEvent<HTMLElement>): void {\n    event.preventDefault();\n  }\n\n  function handleDrop(event: DragEvent<HTMLElement>): void {\n    setIsHovering(false);\n    event.preventDefault();\n    event.stopPropagation();\n\n    const newFiles: Array<File | null> = [];\n\n    const { items, files } = event.dataTransfer;\n\n    if (items) {\n      for (let i = 0, item; (item = items[i]), i < items.length; i++) {\n        if (item.kind === \"file\") {\n          newFiles.push(item.getAsFile());\n        }\n      }\n    } else {\n      for (let i = 0, file; (file = files[i]), i < files.length; i++) {\n        console.log(\"... file[\" + i + \"].name = \" + file.name);\n      }\n    }\n\n    setFileBundles((f) => {\n      f.push({\n        files: newFiles,\n        custodian: \"Anonymous\",\n      });\n      return f;\n    });\n  }\n\n  function handleDropzoneClick(event: MouseEventHandler<HTMLElement>) {\n\n  }\n\n  return (\n    <div\n      onDragOver={handleDragOver}\n      onDragEnter={() => setIsHovering(true)}\n      onDragExit={() => setIsHovering(false)}\n      onDrop={handleDrop}\n      onClick={handleDropzoneClick}\n      className={`Dropzone ${isHovering ? \"hovering\" : \"\"}`}\n    >\n      <input\n        type=\"file\"\n        multiple\n        tabIndex={-1}\n        className=\"hiddenInput\"\n        onChange={handleFileUpload}\n      />\n      {fileBundles.length ? null : (\n        <p>Drop your files here or click to upload them.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Dropzone;\n"]},"metadata":{},"sourceType":"module"}