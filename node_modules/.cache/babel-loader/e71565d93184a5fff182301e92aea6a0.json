{"ast":null,"code":"var _jsxFileName = \"/home/joao/Projects/iconect_test/dropzone/src/components/Dropzone.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport * as tus from \"tus-js-client\";\nimport \"./Dropzone.css\";\nimport LoadingBar from \"./LoadingBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dropzone = () => {\n  _s();\n\n  const [fileBundles, setFileBundles] = useState([]);\n  const [isHovering, setIsHovering] = useState();\n  const hiddenInputRef = useRef(null);\n\n  const uploadFile = (file, index) => {\n    const uploadableFile = {\n      file,\n      progress: 0,\n      complete: false,\n      error: false,\n      url: \"\"\n    };\n\n    if (!file) {\n      uploadableFile.error = true;\n      return uploadableFile;\n    }\n\n    let upload = new tus.Upload(file, {\n      endpoint: \"https://tusd.tusdemo.net/files/\",\n      retryDelays: [0, 3000, 5000, 10000, 20000],\n      metadata: {\n        filename: file === null || file === void 0 ? void 0 : file.name,\n        filetype: file === null || file === void 0 ? void 0 : file.type\n      },\n      onError: function () {\n        uploadableFile.error = true;\n      },\n      onProgress: function (bytesUploaded, bytesTotal) {\n        uploadableFile.progress = bytesUploaded / bytesTotal * 100;\n      },\n      onSuccess: function () {\n        uploadableFile.complete = true;\n        uploadableFile.url = upload.url;\n      }\n    });\n    return uploadableFile;\n  };\n\n  function addFiles(files) {\n    const uploadableFiles = files.map(uploadFile);\n    setFileBundles(bundle => [...bundle, {\n      files: uploadableFiles,\n      custodian: \"Anonymous\"\n    }]);\n  }\n\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  function handleDrop(event) {\n    setIsHovering(false);\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      items,\n      files\n    } = event.dataTransfer;\n\n    if (items) {\n      addFiles(Array.from(items).filter(item => item.kind === \"file\").map(i => i.getAsFile()));\n    } else {\n      addFiles(Array.from(files));\n    }\n  }\n\n  function handleDropzoneClick() {\n    var _hiddenInputRef$curre;\n\n    (_hiddenInputRef$curre = hiddenInputRef.current) === null || _hiddenInputRef$curre === void 0 ? void 0 : _hiddenInputRef$curre.click();\n  }\n\n  function handleInputChange(event) {\n    addFiles(Array.from(event.currentTarget.files || []));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onDragOver: handleDragOver,\n    onDragEnter: () => setIsHovering(true),\n    onDragExit: () => setIsHovering(false),\n    onDrop: handleDrop,\n    onClick: handleDropzoneClick,\n    className: `Dropzone ${isHovering ? \"hovering\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      tabIndex: -1,\n      className: \"hiddenInput\",\n      onChange: handleInputChange,\n      ref: hiddenInputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), fileBundles.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dropzone-Bundles\",\n        children: fileBundles.map((bundle, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Dropzone-ListContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Custodian: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onClick: event => event.stopPropagation(),\n            type: \"text\",\n            defaultValue: bundle === null || bundle === void 0 ? void 0 : bundle.custodian\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Dropzone-List\",\n            children: bundle === null || bundle === void 0 ? void 0 : bundle.files.map((file, index1) => {\n              var _file$file;\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Dropzone-ListItem\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  height: 18,\n                  src: \"https://cdn-icons-png.flaticon.com/512/633/633585.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"Dropzone-ListItem-FileName\",\n                  children: file === null || file === void 0 ? void 0 : (_file$file = file.file) === null || _file$file === void 0 ? void 0 : _file$file.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(LoadingBar, {\n                  percentage: (file === null || file === void 0 ? void 0 : file.progress) || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 23\n                }, this)]\n              }, index1, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dropzone-SubmitButton\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drop your files here or click to upload them.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dropzone, \"VhnF7Le/RrGTF151awmKDYTujec=\");\n\n_c = Dropzone;\nexport default Dropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropzone\");","map":{"version":3,"sources":["/home/joao/Projects/iconect_test/dropzone/src/components/Dropzone.tsx"],"names":["useRef","useState","tus","LoadingBar","Dropzone","fileBundles","setFileBundles","isHovering","setIsHovering","hiddenInputRef","uploadFile","file","index","uploadableFile","progress","complete","error","url","upload","Upload","endpoint","retryDelays","metadata","filename","name","filetype","type","onError","onProgress","bytesUploaded","bytesTotal","onSuccess","addFiles","files","uploadableFiles","map","bundle","custodian","handleDragOver","event","preventDefault","handleDrop","stopPropagation","items","dataTransfer","Array","from","filter","item","kind","i","getAsFile","handleDropzoneClick","current","click","handleInputChange","currentTarget","length","index1"],"mappings":"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","sourcesContent":["import { ChangeEvent, DragEvent, useRef, useState } from \"react\";\nimport * as tus from \"tus-js-client\";\nimport \"./Dropzone.css\";\nimport LoadingBar from \"./LoadingBar\";\n\ninterface UploadableFile {\n  file: File | null;\n  progress: number;\n  complete: boolean;\n  error: boolean;\n  url: string | null;\n}\n\ninterface FileBundle {\n  files: Array<UploadableFile | null>;\n  custodian: string;\n}\n\nconst Dropzone = () => {\n  const [fileBundles, setFileBundles] = useState<Array<FileBundle | undefined>>(\n    []\n  );\n\n  const [isHovering, setIsHovering] = useState<boolean>();\n  const hiddenInputRef = useRef<HTMLInputElement>(null);\n\n  const uploadFile = (file: File | null, index: number) => {\n    const uploadableFile: UploadableFile = {\n      file,\n      progress: 0,\n      complete: false,\n      error: false,\n      url: \"\",\n    };\n\n    if (!file) {\n      uploadableFile.error = true;\n      return uploadableFile;\n    }\n\n    let upload = new tus.Upload(file, {\n      endpoint: \"https://tusd.tusdemo.net/files/\",\n      retryDelays: [0, 3000, 5000, 10000, 20000],\n      metadata: {\n        filename: file?.name,\n        filetype: file?.type,\n      },\n      onError: function () {\n        uploadableFile.error = true;\n      },\n      onProgress: function (bytesUploaded, bytesTotal) {\n        uploadableFile.progress = (bytesUploaded / bytesTotal) * 100;\n      },\n      onSuccess: function () {\n        uploadableFile.complete = true;\n        uploadableFile.url = upload.url;\n      },\n    });\n\n    return uploadableFile;\n  };\n\n  function addFiles(files: Array<File | null>) {\n    const uploadableFiles = files.map(uploadFile);\n\n    setFileBundles((bundle) => [\n      ...bundle,\n      {\n        files: uploadableFiles,\n        custodian: \"Anonymous\",\n      },\n    ]);\n  }\n\n  function handleDragOver(event: DragEvent<HTMLElement>): void {\n    event.preventDefault();\n  }\n\n  function handleDrop(event: DragEvent<HTMLElement>): void {\n    setIsHovering(false);\n    event.preventDefault();\n    event.stopPropagation();\n\n    const { items, files } = event.dataTransfer;\n\n    if (items) {\n      addFiles(\n        Array.from(items)\n          .filter((item) => item.kind === \"file\")\n          .map((i) => i.getAsFile())\n      );\n    } else {\n      addFiles(Array.from(files));\n    }\n  }\n\n  function handleDropzoneClick() {\n    hiddenInputRef.current?.click();\n  }\n\n  function handleInputChange(event: ChangeEvent<HTMLInputElement>) {\n    addFiles(Array.from(event.currentTarget.files || []));\n  }\n\n  return (\n    <div\n      onDragOver={handleDragOver}\n      onDragEnter={() => setIsHovering(true)}\n      onDragExit={() => setIsHovering(false)}\n      onDrop={handleDrop}\n      onClick={handleDropzoneClick}\n      className={`Dropzone ${isHovering ? \"hovering\" : \"\"}`}\n    >\n      <input\n        type=\"file\"\n        multiple\n        tabIndex={-1}\n        className=\"hiddenInput\"\n        onChange={handleInputChange}\n        ref={hiddenInputRef}\n      />\n      {fileBundles.length ? (\n        <>\n          <div className=\"Dropzone-Bundles\">\n            {fileBundles.map((bundle, index) => (\n              <div className=\"Dropzone-ListContainer\" key={index}>\n                <label>Custodian: </label>\n                <input\n                  onClick={(event) => event.stopPropagation()}\n                  type=\"text\"\n                  defaultValue={bundle?.custodian}\n                />\n                <div className=\"Dropzone-List\">\n                  {bundle?.files.map((file, index1) => (\n                    <div className=\"Dropzone-ListItem\" key={index1}>\n                      <img\n                        height={18}\n                        src=\"https://cdn-icons-png.flaticon.com/512/633/633585.png\"\n                      />\n                      <span className=\"Dropzone-ListItem-FileName\">\n                        {file?.file?.name}\n                      </span>\n                      <LoadingBar percentage={file?.progress || 0} />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className=\"Dropzone-SubmitButton\">\n            <button>Submit</button>\n          </div>\n        </>\n      ) : (\n        <p>Drop your files here or click to upload them.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Dropzone;\n"]},"metadata":{},"sourceType":"module"}